package com.rassame.trader.controllers;

import com.rassame.trader.client.paxful.TradeChatClient;
import com.rassame.trader.client.paxful.TradeClient;
import com.rassame.trader.client.paxful.protocol.GetTradeResponse;
import com.rassame.trader.client.paxful.protocol.OfferType;
import com.rassame.trader.domain.Webhook;
import com.rassame.trader.dto.WebhookDTO;
import com.rassame.trader.repository.WebhookRepository;
import com.rassame.trader.services.MultiWiseService;
import com.rassame.trader.services.WiseService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

@RestController
@RequiredArgsConstructor
@Slf4j
public class WebHookController {

    private final TradeClient tradeClient;
    private final TradeChatClient tradeChatClient;
    private final WebhookRepository webhookRepository;
    private final MultiWiseService multiWiseService;
    private final WiseService wiseService;

    public void processNewlyCreatedTrade(GetTradeResponse getTradeResponse) {
        if (getTradeResponse.getData().getTrade().getOfferType() == OfferType.SELL) {
            if (getTradeResponse.getData().getTrade().getPaymentMethodName().equalsIgnoreCase("payoneer")) {
                new Thread(() -> {
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "Hi my payoneer account is khalifarsm%40outlook.com please use website developement as description");
                }).run();
            } else if (getTradeResponse.getData().getTrade().getFiatCurrencyCode().equalsIgnoreCase("USD")) {
                //wise USD bank account
                new Thread(() -> {
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "Hello these messages are generated by a BOT so do not try to communicate with it. Please follow the instructions and you will be able to finish the trade easily");
                    try {
                        Thread.sleep(2000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "my wise account is " + multiWiseService.getWise().getEmail() + " my name is " + multiWiseService.getWise().getName());
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "the best way to sent money using transferwise is to use mobile app. Just add my email to your phone contact list and make sure contact sync is enabled in you wise application. Now go to recipients and you will find me under contacts on wise BTW you can use any other method if you prefer like with email or bank account");
                    try {
                        Thread.sleep(5000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "But i think that wise to wise transfer for USD cannot use email you should use usd balance bank details instead check this https%3A%2F%2Fwise.com%2Fhelp%2Farticles%2F2932105%2Fcan-i-send-money-to-someone-with-only-their-email-address");
                    try {
                        Thread.sleep(5000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), multiWiseService.getWise().getAccountUSD());
                }).run();

            } else {
                new Thread(() -> {
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "Hello these messages are generated by a BOT so do not try to communicate with it. Please follow the instructions and you will be able to finish the trade easily");
                    try {
                        Thread.sleep(2000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "my wise account is " + multiWiseService.getWise().getEmail() + " my name is " + multiWiseService.getWise().getName());
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "the best way to sent money using transferwise is to use mobile app. Just add my email to your phone contact list and make sure contact sync is enabled in you wise application. Now go to recipients and you will find me under contacts on wise BTW you can use any other method if you prefer like with email or bank account");
                    try {
                        Thread.sleep(2000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    if (getTradeResponse.getData().getTrade().getFiatCurrencyCode().equalsIgnoreCase("EUR")) {
                        tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), multiWiseService.getWise().getAccountEUR());
                    }
                    if (getTradeResponse.getData().getTrade().getFiatCurrencyCode().equalsIgnoreCase("GBP")) {
                        tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), multiWiseService.getWise().getAccountGBP());
                    }
                }).run();
            }
            sendSecondMessage(getTradeResponse);
        } else {
            //buy
            new Thread(() -> {
                tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "Hello these messages are generated by a BOT so do not try to communicate with it. Please follow the instructions and you will be able to finish the trade easily");
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                if (getTradeResponse.getData().getTrade().getFiatCurrencyCode().equalsIgnoreCase("USD")) {
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "please read the trade instructions and go to https%3A%2F%2Fusdtbank.best%2Fsellusd%3Ftrade%3D" + getTradeResponse.getData().getTrade().getTradeHash() + " enter your bank information from wise and submit");

                } else {
                    tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "please read the trade instructions and go to https%3A%2F%2Fusdtbank.best%2Fsell%3Ftrade%3D" + getTradeResponse.getData().getTrade().getTradeHash() + " enter your wise email and submit");
                }
                try {
                    Thread.sleep(90000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "Please do not forget to leave a nice feedback after completing the trade");
            }).run();
        }
    }

    @PostMapping("/paxful/webhook")
    public void webhook(@RequestBody(required = false) WebhookDTO dto, HttpServletRequest request, HttpServletResponse response) {
        log.info("webhook received {}", dto);
        if (dto != null) {
            if (dto.getType().equalsIgnoreCase("trade.incoming")) {
                log.info("created trade webhook {}", dto.getPayload().getTradeId());
                List<Webhook> webhooks = webhookRepository.findByTradeId(dto.getPayload().getTradeId());
                if (webhooks.size() == 0) {
                    webhookRepository.save(new Webhook().setTradeId(dto.getPayload().getTradeId()));
                    GetTradeResponse getTradeResponse = tradeClient.getTrade(dto.getPayload().getTradeId());
                    if (getTradeResponse != null
                            && getTradeResponse.getData() != null
                            && getTradeResponse.getData().getTrade() != null) {
                        processNewlyCreatedTrade(getTradeResponse);
                    }
                }
            } else {
                //process paid
                log.info("paid trade webhook {}", dto.getPayload().getTradeHash());
                GetTradeResponse getTradeResponse = tradeClient.getTrade(dto.getPayload().getTradeHash());
                if (getTradeResponse != null
                        && getTradeResponse.getData() != null
                        && getTradeResponse.getData().getTrade() != null) {
                    wiseService.buyUSDTWithBuyerName(getTradeResponse);
                }
            }
        }
        response.setHeader("X-Paxful-Request-Challenge", request.getHeader("X-Paxful-Request-Challenge"));
    }

    public void sendSecondMessage(GetTradeResponse getTradeResponse) {
        new Thread(() -> {
            try {
                Thread.sleep(90000);
                tradeChatClient.createChatMessage(getTradeResponse.getData().getTrade().getTradeHash(), "after making the payment mark the trade as PAID and the USDT will be released immediately if not go to https%3A%2F%2Fusdtbank.best%2Fbuy%3Ftrade%3D" + getTradeResponse.getData().getTrade().getTradeHash() + " enter wise transfer id submit for more info please read the trade instructions");
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }).start();
    }
}
